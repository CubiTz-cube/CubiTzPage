---
interface Props {
}

const {} = Astro.props;
---
<div class="espacio3D">
    <div class="cubo3D">
      <div class="base"></div>
      <aside class="cara cara1"></aside>
      <aside class="cara cara2"></aside>
      <aside class="cara cara3"></aside>
      <aside class="cara cara4"></aside>
      <aside class="cara cara5"></aside>
      <aside class="cara cara6"></aside>
    </div><!-- termina cubo 3d -->
  </div>

<style>
    div.espacio3D {
  width: 18.75em;
  height: 18.75em;
  perspective-origin: center -50%;
  perspective: 31.25em;
  transform: scale(1);
}

div.cubo3D {
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transform: translateZ(-150px);
  animation: gira 20s linear infinite;
}

aside.cara {
  position: absolute;
  width: 18.625rem;
  height: 18.625rem;
  background-color: var(--cubitz2-dark);
  border: 2px solid hsl(212, 100%, 74%);
  font-size: 3em;
  text-align: center;
  line-height: 18.625rem;
}

aside.cara1 { /* Frente */
    transform: rotateX(45deg) translateZ(-150px);
}

aside.cara2 { /* Atr√°s */
  transform: rotateY(180deg) rotateX(45deg) translateZ(150px);
}

aside.cara3 { /* Izquierda */
  transform: rotateY(-90deg) rotateZ(45deg)  translateZ(150px);
}

aside.cara4 { /* derecha */
  transform: rotateY(90deg) rotateZ(45deg) translateZ(150px);
}

aside.cara5 { /* abajo */
  transform: rotateX(-45deg) translateZ(150px);
}

aside.cara6 { /* arriba */
  transform: rotateX(45deg) translateZ(150px);
}

@keyframes gira {
  from {
    transform: translateZ(-200px) rotate(0deg);
  }
  to {
    transform: translateZ(-200px) rotate(360deg);
  }
}
</style>